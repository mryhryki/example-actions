name: Create version up pull request

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Which SemVer'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: write

jobs:
  create_version_up_pull_request:
    runs-on: ubuntu-latest
    steps:
#      - name: Check base ref type
#        run: |
#          test "${GITHUB_REF_TYPE}" == "tag"
#      - name: Check base version format
#        run: |
#          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
#          printf '%s' "${GITHUB_REF_NAME}" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+(|-.+)$'
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.env.GITHUB_REF }}
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Update version
        run: |
          npm version "${{ inputs.semver }}" --no-git-tag-version
          NEW_VERSION="$(cat package.json | jq -r '.version')"
          echo "${NEW_VERSION}"
          echo "NEW_VERSION=${NEW_VERSION}" >> "${GITHUB_ENV}"
      - name: Show new version
        run: echo "${NEW_VERSION}"
      - name: Create milestone
        uses: 'WyriHaximus/github-action-create-milestone@v1'
        with:
          title: "v${NEW_VERSION}"
      - name: Create hotfix branch
        run: |
          set -xe
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git log -n 1
          git rev-parse
          git switch -c "hotfix/${NEW_VERSION}"
          git add -A
          git commit -m "Hotfix/${NEW_VERSION}"
          git push origin "hotfix/${NEW_VERSION}"
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}
      - name: Create Pull Request
        run: |
          set -xe
          gh pr create \
              --base "main" \
              --title "doc: Hotfix/${NEW_VERSION}" \
              --body "Merge ${NEW_VERSION} into main." \
              --label "Type: Documentation" \
              --milestone "${NEW_VERSION}" \
              --assignee "${{ github.actor }}" \
              --draft
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
